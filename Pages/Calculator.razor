@page "/calculator"
@using Acau_Playground.Services;
@using Acau_Playground.Viewmodels;
@inject CalculatorViewModel ViewModel

<MudText Typo="Typo.h4" GutterBottom="true">계산기</MudText>

<MudButtonGroup>
    <MudSwitch @bind-Checked="@ViewModel.IsEdit" Color="Color.Primary" Label="@($"편집모드: {(ViewModel.IsEdit ? "ON" : "OFF")}")" />
    <MudCheckBox @bind-Checked="@ViewModel.IsCopyClipboard" Color="Color.Primary" Label="클립보드 복사"></MudCheckBox>
</MudButtonGroup>

<MudDataGrid Items="@Test" Class="mb-4" Height="500px" SortMode="SortMode.None" Bordered=true Striped=true>
    <Columns>
        <PropertyColumn Property="x => x.Name" Title="항목"/>
        <TemplateColumn CellClass="d-flex justify-end" Title="가격">
            <CellTemplate>
                <MudTextField Text="dd" Margin="Margin.Dense" Style="text-align:center" />
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

<MudStack Row=true Justify="Justify.FlexEnd" AlignItems="AlignItems.End" Class="mb-4">
    <MudButton Color="Color.Primary" Variant="Variant.Outlined" @onclick="(()=> ViewModel.Price = 0)">초기화</MudButton>
    <MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="ViewModel.CalculateCommand.Execute">계산</MudButton>
</MudStack>
<MudText Class="mb-4" Align="Align.Right"><b>가격: @($"$ {ViewModel.Price:N0}")</b></MudText>

@code {
    private record class TestClass(string Name, int Age);
    private List<TestClass> Test = new();

    protected override void OnInitialized()
    {
        Test.Add(new("a", 22));
        Test.Add(new("a", 2));
        Test.Add(new("a", 233));
        Test.Add(new("a", 2));
    }
}
